export const playground = {
  componentPlayground: {
    title: 'Component Testing Playground',
    subtitle: 'Test various UI components and their states',
    guide: {
      title: 'Testing Guide',
      description: 'This playground provides a safe environment to practice testing different UI components. Each component has various states and interactions you can test.',
      objectives: 'Learning Objectives',
      objectiveItems: [
        'Test form validation and error states',
        'Verify modal and dialog behaviors',
        'Test drag and drop functionality',
        'Validate file upload restrictions',
        'Check notification and toast messages',
        'Test loading and error states',
        'Verify responsive design breakpoints',
      ],
      exercises: 'Practice Exercises',
      exerciseItems: [
        'Try submitting the form with invalid data',
        'Test the file upload with different file types',
        'Drag items in the sortable list',
        'Toggle between different component states',
        'Test keyboard navigation and accessibility',
        'Verify error messages are descriptive',
        'Check component behavior on mobile view',
      ],
    },
    sections: {
      forms: {
        title: 'Form Components',
        description: 'Test various form inputs and validations',
        loginForm: 'Login Form',
        registrationForm: 'Registration Form',
        contactForm: 'Contact Form',
        multiStepForm: 'Multi-Step Form',
      },
      modals: {
        title: 'Modals & Dialogs',
        description: 'Test modal behaviors and interactions',
        simpleModal: 'Simple Modal',
        confirmDialog: 'Confirmation Dialog',
        formModal: 'Form Modal',
        nestedModal: 'Nested Modal',
      },
      buttons: {
        title: 'Buttons & Actions',
        description: 'Test button states and behaviors',
        primaryButton: 'Primary Button',
        secondaryButton: 'Secondary Button',
        dangerButton: 'Danger Button',
        loadingButton: 'Loading Button',
        disabledButton: 'Disabled Button',
      },
      inputs: {
        title: 'Input Fields',
        description: 'Test input validations and states',
        textInput: 'Text Input',
        emailInput: 'Email Input',
        passwordInput: 'Password Input',
        numberInput: 'Number Input',
        dateInput: 'Date Input',
        fileInput: 'File Input',
        selectDropdown: 'Select Dropdown',
        checkbox: 'Checkbox',
        radioButton: 'Radio Button',
        toggle: 'Toggle Switch',
        slider: 'Range Slider',
        textarea: 'Textarea',
      },
      notifications: {
        title: 'Notifications & Alerts',
        description: 'Test notification behaviors',
        successNotification: 'Success Notification',
        errorNotification: 'Error Notification',
        warningNotification: 'Warning Notification',
        infoNotification: 'Info Notification',
      },
      tables: {
        title: 'Tables & Lists',
        description: 'Test data display components',
        dataTable: 'Data Table',
        sortableList: 'Sortable List',
        paginatedList: 'Paginated List',
        infiniteScroll: 'Infinite Scroll',
      },
      loading: {
        title: 'Loading & Progress',
        description: 'Test loading states',
        spinner: 'Spinner',
        progressBar: 'Progress Bar',
        skeleton: 'Skeleton Loader',
        shimmer: 'Shimmer Effect',
      },
      dragDrop: {
        title: 'Drag & Drop',
        description: 'Test drag and drop interactions',
        sortableItems: 'Sortable Items',
        kanbanBoard: 'Kanban Board',
        fileDropZone: 'File Drop Zone',
      },
    },
    testData: {
      validEmail: 'test@example.com',
      invalidEmail: 'invalid-email',
      validPassword: 'SecurePass123!',
      weakPassword: '123',
      sampleText: 'This is sample text for testing',
      longText: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    },
    actions: {
      submit: 'Submit',
      cancel: 'Cancel',
      reset: 'Reset',
      openModal: 'Open Modal',
      closeModal: 'Close Modal',
      showNotification: 'Show Notification',
      uploadFile: 'Upload File',
      dragHere: 'Drag here',
      dropHere: 'Drop files here',
      loading: 'Loading...',
      processing: 'Processing...',
    },
    messages: {
      formSubmitted: 'Form submitted successfully!',
      validationError: 'Please fix the validation errors',
      fileUploaded: 'File uploaded successfully',
      fileSizeError: 'File size exceeds limit',
      fileTypeError: 'Invalid file type',
      itemAdded: 'Item added successfully',
      itemDeleted: 'Item deleted successfully',
      itemUpdated: 'Item updated successfully',
      confirmDelete: 'Are you sure you want to delete this item?',
      noData: 'No data available',
    },
  },
};