export const qa = {
  qaPages: {
    ecommerce: {
      breadcrumb: {
        electronics: 'Electronics',
        audio: 'Audio',
        headphones: 'Headphones',
      },
      testingGuide: {
        title: 'E-Commerce Testing Guide',
        description: 'Test various e-commerce features including cart functionality, price calculations, and product reviews.',
      },
      scenarios: {
        cartValidation: {
          title: 'Cart Validation',
          description: 'Test adding items to cart, updating quantities, and removing items.',
          step1: 'Add product to cart',
          step2: 'Change quantity to 3',
          step3: 'Verify price updates',
          step4: 'Remove item from cart',
          step5: 'Verify cart is empty',
          step6: 'Add multiple products',
          expectedResult: 'Cart should update correctly with accurate totals and item counts',
        },
        priceCalculation: {
          title: 'Price Calculation',
          description: 'Test price calculations with discounts, coupons, and taxes.',
          step1: 'Add product with regular price',
          step2: 'Apply discount code',
          step3: 'Verify discount is applied',
          step4: 'Add multiple quantities',
          step5: 'Check subtotal calculation',
          step6: 'Verify tax calculation',
          step7: 'Check final total',
          expectedResult: 'All price calculations should be accurate with proper rounding',
        },
        imageGallery: {
          title: 'Image Gallery',
          description: 'Test product image gallery navigation and zoom functionality.',
          step1: 'Click on thumbnail images',
          step2: 'Use arrow keys to navigate',
          step3: 'Test image zoom on hover',
          step4: 'Check mobile swipe gestures',
          step5: 'Verify image loading',
          expectedResult: 'All images should load and navigation should work smoothly',
        },
        reviewFiltering: {
          title: 'Review Filtering',
          description: 'Test review sorting and filtering options.',
          step1: 'Sort reviews by rating',
          step2: 'Filter by verified purchase',
          step3: 'Sort by most helpful',
          step4: 'Filter by star rating',
          step5: 'Search within reviews',
          expectedResult: 'Reviews should sort and filter correctly based on selected criteria',
        },
        stockValidation: {
          title: 'Stock Validation',
          description: 'Test stock availability and limit validations.',
          step1: 'Check stock indicator',
          step2: 'Try to add more than available',
          step3: 'Verify error message',
          step4: 'Test low stock warning',
          step5: 'Check out of stock behavior',
          expectedResult: 'Stock limits should be enforced with appropriate messages',
        },
        wishlistFlow: {
          title: 'Wishlist Flow',
          description: 'Test adding and managing items in wishlist.',
          step1: 'Add item to wishlist',
          step2: 'View wishlist page',
          step3: 'Move item to cart',
          step4: 'Remove from wishlist',
          step5: 'Share wishlist',
          expectedResult: 'Wishlist operations should work seamlessly with proper notifications',
        },
      },
      tips: {
        tip1: 'Verify cart updates when quantity changes',
        tip2: 'Test coupon code validation',
        tip3: 'Check price calculation with discounts',
        tip4: 'Validate stock availability',
        tip5: 'Test image gallery navigation',
      },
      testIds: {
        productImage: 'Main product image',
        addToCart: 'Add to cart button',
        quantityInput: 'Quantity selector',
        sizeSelector: 'Size dropdown',
        colorSelector: 'Color options',
        couponInput: 'Coupon code field',
        priceDisplay: 'Price display area',
        reviewSort: 'Review sort dropdown',
      },
      product: {
        brand: 'Brand',
        sku: 'SKU',
        rating: 'out of 5 stars',
        save: 'Save',
        inStock: 'In Stock',
        lowStock: 'Only {{count}} left in stock!',
        features: 'Key Features',
        feature1: 'Active Noise Cancellation',
        feature2: 'Wireless Bluetooth 5.0',
        feature3: '40-hour battery life',
        feature4: 'Premium leather cushions',
        feature5: 'Foldable design',
        feature6: 'Voice assistant support',
        shippingInfo: 'Free shipping on orders over $50',
        estimatedDelivery: 'Estimated delivery: 3-5 business days',
        returnsInfo: '30-day return policy',
      },
      options: {
        size: 'Size',
        sizeGuide: 'Size Guide',
        color: 'Color',
        quantity: 'Quantity',
      },
      coupon: {
        title: 'Have a coupon?',
        placeholder: 'Enter coupon code',
      },
      actions: {
        applyCoupon: 'Apply Coupon',
        addToCart: 'Add to Cart',
        buyNow: 'Buy Now',
      },
      reviews: {
        verifiedPurchase: 'Verified Purchase',
        helpful: 'Helpful',
        showMore: 'Show More Reviews',
      },
      related: {
        title: 'Related Products',
      },
      messages: {
        invalidCoupon: 'Invalid coupon code',
        selectSize: 'Please select a size',
        selectColor: 'Please select a color',
        addedToCart: 'Added to cart successfully',
        quantityUpdated: 'Quantity updated',
        outOfStock: 'This item is out of stock',
        couponApplied: 'Coupon applied successfully',
      },
    },
  },
  qaHub: {
    title: 'QA Testing Playground',
    subtitle: 'Master software testing with hands-on practice',
    description: 'Welcome to your interactive testing environment. Practice real-world QA scenarios, learn testing techniques, and improve your skills.',
    testScenarios: 'Test Scenarios',
    startTesting: 'Start Testing',
    learningSupport: 'Learning Support',
    testingTips: 'Testing Tips',
    featuresForTesting: 'Features for Testing',
    quickStartGuide: 'Quick Start Guide',
    support: {
      message: 'Need help with your testing journey? Our support team is here to help you master QA skills.',
      email: 'support@qalearningweb.com',
    },
    quickStart: {
      title: 'How to Get Started',
      steps: [
        'Choose a testing scenario from the available options',
        'Read the test cases and requirements',
        'Interact with the application to find bugs',
        'Use browser DevTools to inspect elements',
        'Document your findings and test results',
      ],
    },
    features: {
      title: 'What You Can Test',
      realWorld: {
        title: 'Real-World Scenarios',
        description: 'Practice with e-commerce, banking, and social media applications',
      },
      interactive: {
        title: 'Interactive Components',
        description: 'Test forms, modals, drag-and-drop, and complex UI interactions',
      },
      automated: {
        title: 'Automation Ready',
        description: 'All elements have test IDs for Selenium, Cypress, and Playwright',
      },
      responsive: {
        title: 'Responsive Testing',
        description: 'Test across different screen sizes and devices',
      },
      authSecurity: {
        title: 'Authentication & Security',
        items: [
          'Login/Logout functionality',
          'Password reset flow',
          'Session management',
          'Two-factor authentication',
          'Role-based access control',
        ],
      },
      formsValidation: {
        title: 'Forms & Validation',
        items: [
          'Required field validation',
          'Email format validation',
          'Password strength requirements',
          'Multi-step form workflows',
          'File upload validation',
        ],
      },
      interactiveElements: {
        title: 'Interactive Elements',
        items: [
          'Drag and drop functionality',
          'Modal dialogs and popups',
          'Real-time search and filtering',
          'Infinite scroll pagination',
          'Tooltips and notifications',
        ],
      },
    },
    scenarios: {
      componentPlayground: {
        title: 'Component Playground',
        description: 'Test individual UI components and their various states',
        tags: ['Forms', 'Modals', 'Validation', 'UI Components'],
      },
      ecommerce: {
        title: 'E-Commerce Platform',
        description: 'Test shopping cart, checkout, payment flows, and inventory management',
        tags: ['Cart', 'Checkout', 'Payment', 'E2E Testing'],
      },
      banking: {
        title: 'Banking Dashboard',
        description: 'Test financial transactions, security features, and data validation',
        tags: ['Security', 'Transactions', 'Validation', 'Finance'],
      },
      social: {
        title: 'Social Media Feed',
        description: 'Test real-time updates, user interactions, and content management',
        tags: ['Real-time', 'Social', 'Media', 'Interactions'],
      },
      booking: {
        title: 'Booking System',
        description: 'Test complex forms, date validations, and booking workflows',
        tags: ['Forms', 'Dates', 'Booking'],
      },
    },
    getStarted: {
      title: 'Getting Started',
      steps: {
        1: {
          title: 'Choose a Scenario',
          description: 'Select from our pre-built testing scenarios or explore the component playground',
        },
        2: {
          title: 'Read Test Cases',
          description: 'Each scenario includes detailed test cases and expected behaviors',
        },
        3: {
          title: 'Execute Tests',
          description: 'Manually test the application or use the provided test IDs for automation',
        },
        4: {
          title: 'Find Bugs',
          description: 'Some scenarios include intentional bugs for you to discover',
        },
      },
    },
    tips: {
      title: 'Testing Tips',
      items: [
        'Always check edge cases and boundary values',
        'Test both positive and negative scenarios',
        'Verify error messages and validation feedback',
        'Check accessibility with keyboard navigation',
        'Test different browser and device combinations',
        'Use browser DevTools to inspect elements and network calls',
      ],
      formValidation: {
        title: 'Form Validation',
        description: 'Test all input types and validation rules',
      },
      responsiveDesign: {
        title: 'Responsive Design',
        description: 'Check layouts on different screen sizes',
      },
      userInteractions: {
        title: 'User Interactions',
        description: 'Test clicks, hovers, and keyboard navigation',
      },
      dataPersistence: {
        title: 'Data Persistence',
        description: 'Verify data saves and loads correctly',
      },
    },
  },
  hub: {
    features: {
      title: 'What You Can Test',
      realWorld: {
        title: 'Real-World Scenarios',
        description: 'Practice with e-commerce, banking, and social media applications',
      },
      interactive: {
        title: 'Interactive Components',
        description: 'Test forms, modals, drag-and-drop, and complex UI interactions',
      },
      automated: {
        title: 'Automation Ready',
        description: 'All elements have test IDs for Selenium, Cypress, and Playwright',
      },
      responsive: {
        title: 'Responsive Testing',
        description: 'Test across different screen sizes and devices',
      },
      authSecurity: {
        title: 'Authentication & Security',
        items: [
          'Login/Logout functionality',
          'Password reset flow',
          'Session management',
          'Two-factor authentication',
          'Role-based access control',
        ],
      },
      formsValidation: {
        title: 'Forms & Validation',
        items: [
          'Required field validation',
          'Email format validation',
          'Password strength requirements',
          'Multi-step form workflows',
          'File upload validation',
        ],
      },
      interactiveElements: {
        title: 'Interactive Elements',
        items: [
          'Drag and drop functionality',
          'Modal dialogs and popups',
          'Real-time search and filtering',
          'Infinite scroll pagination',
          'Tooltips and notifications',
        ],
      },
    },
    getStarted: {
      title: 'Getting Started',
      steps: {
        1: {
          title: 'Choose a Scenario',
          description: 'Select from our pre-built testing scenarios or explore the component playground',
        },
        2: {
          title: 'Read Test Cases',
          description: 'Each scenario includes detailed test cases and expected behaviors',
        },
        3: {
          title: 'Execute Tests',
          description: 'Manually test the application or use the provided test IDs for automation',
        },
        4: {
          title: 'Find Bugs',
          description: 'Some scenarios include intentional bugs for you to discover',
        },
      },
    },
    tips: {
      title: 'Testing Tips',
      items: [
        'Always check edge cases and boundary values',
        'Test both positive and negative scenarios',
        'Verify error messages and validation feedback',
        'Check accessibility with keyboard navigation',
        'Test different browser and device combinations',
        'Use browser DevTools to inspect elements and network calls',
      ],
      formValidation: {
        title: 'Form Validation',
        description: 'Test all input types and validation rules',
      },
      responsiveDesign: {
        title: 'Responsive Design',
        description: 'Check layouts on different screen sizes',
      },
      userInteractions: {
        title: 'User Interactions',
        description: 'Test clicks, hovers, and keyboard navigation',
      },
      dataPersistence: {
        title: 'Data Persistence',
        description: 'Verify data saves and loads correctly',
      },
    },
    bookingSystem: {
      header: {
        title: 'Luxury Salon & Spa',
        subtitle: 'Book your appointment online',
        myBookings: 'My Bookings',
        help: 'Help',
      },
      testingGuide: {
        title: 'Booking System Testing Guide',
        description: 'Test multi-step booking flows, calendar interactions, and validation logic',
      },
      scenarios: {
        multiStepFlow: {
          title: 'Complete Booking Flow',
          description: 'Test the entire multi-step booking process',
          steps: [
            'Select a service (e.g., Haircut & Style)',
            'Click Next to proceed to step 2',
            'Select a date from calendar',
            'Choose an available time slot',
            'Click Next to step 3',
            'Select a staff member',
            'Click Next to step 4',
            'Fill in customer details',
            'Submit booking',
            'Verify confirmation and booking reference',
          ],
          expectedResult: 'Booking completes with confirmation number',
        },
        calendarNavigation: {
          title: 'Calendar Date Selection',
          description: 'Test calendar navigation and date restrictions',
          steps: [
            'Navigate to calendar step',
            'Try selecting past date',
            'Verify past dates are disabled',
            'Navigate to next month',
            'Select a weekend date',
            'Check if weekends have different availability',
            'Select a valid future date',
          ],
          expectedResult: 'Only valid future dates can be selected',
        },
        timeSlotAvailability: {
          title: 'Time Slot Management',
          description: 'Test time slot selection and availability',
          steps: [
            'Select a date',
            'View available time slots',
            'Try selecting unavailable slot (grayed out)',
            'Verify it cannot be selected',
            'Select available slot',
            'Change date',
            'Verify time slot resets',
          ],
          expectedResult: 'Only available slots can be selected',
        },
        formValidation: {
          title: 'Customer Information Validation',
          description: 'Test form field validations',
          steps: [
            'Navigate to customer info step',
            'Try submitting empty form',
            'Verify required field errors',
            'Enter invalid email format',
            'Verify email validation error',
            'Enter invalid phone number',
            'Verify phone validation',
            'Fill all fields correctly',
            'Submit successfully',
          ],
          expectedResult: 'Form validates all inputs correctly',
        },
        stepNavigation: {
          title: 'Step Navigation Control',
          description: 'Test moving between booking steps',
          steps: [
            'Complete step 1',
            'Click Next',
            'Click Back button',
            'Verify data persists',
            'Try skipping to step 3',
            'Verify cannot skip steps',
            'Complete all steps in order',
          ],
          expectedResult: 'Steps must be completed in order',
        },
        addonSelection: {
          title: 'Service Add-ons',
          description: 'Test adding additional services',
          steps: [
            'Select main service',
            'Check available add-ons',
            'Select multiple add-ons',
            'Verify price updates',
            'Verify duration updates',
            'Remove an add-on',
            'Verify price recalculation',
          ],
          expectedResult: 'Add-ons correctly update price and duration',
        },
      },
      tips: [
        'Test with different time zones if applicable',
        'Verify booking confirmation email format',
        'Check calendar for holidays and special hours',
        'Test maximum booking limits per day',
        'Verify cancellation and rescheduling options',
        'Test with various guest counts for group bookings',
      ],
      testIds: [
        { element: 'service-card', description: 'Service selection cards' },
        { element: 'calendar-date', description: 'Calendar date cells' },
        { element: 'time-slot', description: 'Time slot buttons' },
        { element: 'staff-card', description: 'Staff member cards' },
        { element: 'next-step-btn', description: 'Next step button' },
        { element: 'back-step-btn', description: 'Previous step button' },
        { element: 'submit-booking', description: 'Final submit button' },
        { element: 'booking-reference', description: 'Confirmation number' },
      ],
      steps: {
        service: 'Service',
        dateTime: 'Date & Time',
        staff: 'Staff',
        details: 'Details',
      },
      serviceSelection: {
        title: 'Select a Service',
        duration: 'Duration',
        free: 'Free',
        optionalAddons: 'Optional Add-ons',
      },
      dateTimeSelection: {
        title: 'Select Date & Time',
        chooseDate: 'Choose a Date',
        availableTimeSlots: 'Available Time Slots',
        peakHoursPricing: 'Peak hours (12:00-15:00) have premium pricing',
      },
      staffSelection: {
        title: 'Choose Your Specialist',
      },
      customerDetails: {
        title: 'Your Details',
        fullName: 'Full Name *',
        email: 'Email Address *',
        phone: 'Phone Number *',
        guestCount: 'Number of Guests',
        specialRequests: 'Special Requests (Optional)',
        termsAndConditions: 'I agree to the terms and conditions and cancellation policy *',
        person: 'Person',
        people: 'People',
        placeholders: {
          name: 'John Doe',
          email: 'john@example.com',
          phone: '+1 (555) 000-0000',
          requests: 'Any special requirements or preferences...',
        },
      },
      navigation: {
        previous: 'Previous',
        next: 'Next',
        bookAppointment: 'Book Appointment',
      },
      summary: {
        title: 'Booking Summary',
        service: 'Service',
        date: 'Date',
        time: 'Time',
        specialist: 'Specialist',
        addons: 'Add-ons',
        total: 'Total',
        selectService: 'Select a service to see booking details',
        policies: {
          cancellation: 'Free cancellation up to 24 hours before',
          confirmation: 'Instant confirmation via email',
          payment: 'Secure payment processing',
        },
      },
      confirmationModal: {
        title: 'Booking Confirmed!',
        message: 'Your appointment has been successfully booked.',
        reference: 'Booking Reference',
        emailSent: 'A confirmation email has been sent to {{email}}',
        ok: 'OK',
        print: 'Print',
      },
      validation: {
        selectService: 'Please select a service',
        selectDate: 'Please select a date',
        selectTime: 'Please select a time',
        selectSpecialist: 'Please select a specialist',
        enterName: 'Please enter your name',
        enterEmail: 'Please enter your email',
        invalidEmail: 'Please enter a valid email address',
        enterPhone: 'Please enter your phone number',
        invalidPhone: 'Please enter a valid phone number (at least 10 digits)',
        acceptTerms: 'Please accept the terms and conditions',
        nameRequired: 'Name is required',
        emailRequired: 'Please enter a valid email address',
        phoneRequired: 'Please enter at least 10 digits',
      },
      services: {
        haircut: {
          name: 'Haircut & Style',
          description: 'Professional haircut with styling',
        },
        color: {
          name: 'Hair Color',
          description: 'Full color treatment',
        },
        highlights: {
          name: 'Highlights',
          description: 'Partial or full highlights',
        },
        treatment: {
          name: 'Deep Treatment',
          description: 'Nourishing hair treatment',
        },
        blowdry: {
          name: 'Blow Dry',
          description: 'Professional blow dry and style',
        },
        consultation: {
          name: 'Consultation',
          description: 'Free consultation',
        },
      },
      staff: {
        colorSpecialist: 'Color Specialist',
        seniorStylist: 'Senior Stylist',
        hairDesigner: 'Hair Designer',
        anyAvailable: 'First Available',
      },
      addons: {
        shampoo: 'Premium Shampoo',
        massage: 'Scalp Massage',
        refreshment: 'Complimentary Refreshments',
      },
      messages: {
        bookingConfirmed: 'Booking confirmed! Reference: {{reference}}',
      },
      backButton: 'Back to QA Testing Playground',
    },
  },
  testingGuide: {
    showGuide: 'Show Testing Guide',
    scenarios: 'Test Scenarios',
    tips: 'Testing Tips',
    testIds: 'Available Test IDs',
    availableTestIds: 'Available Test IDs',
    difficulty: {
      easy: 'Easy',
      medium: 'Medium',
      hard: 'Hard',
    },
    steps: 'Steps',
    expectedResult: 'Expected Result',
    element: 'Element',
    description: 'Description',
  },
};